fetchUser(){
    return this.http.get(this.apiUrl)
}
getUsers(){
    this.apiService.fetchUser().subscribe((res)=>{
      this.users = res;
      this.filteredUsers = [...this.users]
    })
}


postUser(obj){
  return this.http.post(this.apiUrl,obj)
}
addUser(){
  this.apiService.postUser(this.userForm.value).subscribe((user)=>{
    this.filteredUsers.push(user)
  })
}


delete(id:string){
 return this.http.delete(`${this.apiUrl}/${id}`)
}
removeUser(id){
  this.apiService.delete(id).subscribe(()=>this.filteredUsers = this.filteredUsers.filter((user)=>user.id !== id))        
}

update(id: string, params: any) {
    return this.http.put(`${baseUrl}/${id}`, params);
}
updateUser(id){
    this.apiService.put(id,this.userForm.value).subscribe((user)=>{
      alert('updated')
})
}


